<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.wolfcode.trip.base.mapper.UserChatMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.trip.base.domain.UserChat">
        <id column="id" property="id"/>
        <result column="message" property="message"/>
        <result column="sendTime" property="sendTime"/>
        <result column="status" property="status"/>
        <association property="sender" javaType="user" columnPrefix="s_">
            <id column="id" property="id"/>
            <result column="headImgUrl" property="headImgUrl"/>
            <result column="nickName" property="nickName"/>
        </association>
        <association property="receiver" javaType="user" columnPrefix="r_">
            <id column="id" property="id"/>
            <result column="headImgUrl" property="headImgUrl"/>
            <result column="nickName" property="nickName"/>
        </association>
    </resultMap>
    <delete id="deleteByPrimaryKey">
    delete from userchat
    where id = #{id}
  </delete>
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
    insert into userchat (sender_id, receiver_id, message, sendTime, status)
    values (#{sender.id}, #{receiver.id}, #{message}, #{sendTime}, #{status})
  </insert>
    <update id="updateByPrimaryKey">
    update userchat
    set sender_id = #{sender.id},
      receiver_id = #{receiver.id},
      message = #{message},
      sendTime = #{sendTime},
      status = #{status}
    where id = #{id}
  </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
    select uc.*,s.id,s.headImgUrl,s.nickName,r.id,r.headImgUrl,r.nickName
    from userchat uc
    JOIN user s ON s.id=uc.id
    JOIN user r ON r.id=uc.id
    where uc.id = #{s.id}
  </select>
    <select id="selectAll" resultMap="BaseResultMap">
    select uc.*,s.id,s.headImgUrl,s.nickName,r.id,r.headImgUrl,r.nickName
    from userchat uc
    JOIN user s ON s.id=uc.id
    JOIN user r ON r.id=uc.id
  </select>
    <select id="selectForList" resultMap="BaseResultMap">
    select id, sender_id, receiver_id, message, sendTime, status
    from userchat
  </select>
    <select id="listUserById" resultMap="BaseResultMap">
    select uc.id, uc.sender_id, uc.receiver_id, uc.message, uc.sendTime, uc.status,
    r.id r_id,s.id s_id,r.headImgUrl r_headImgUrl,r.nickName,s.headImgUrl s_headImgUrl,s.nickName s_nickName
    from userchat uc
    JOIN user r ON r.id = uc.receiver_id
    JOIN user s ON s.id = uc.sender_id
    WHERE sender_id=#{senderId} AND receiver_id=#{receiverId}
    OR sender_id=#{receiverId} AND receiver_id=#{senderId}
    </select>
    <select id="selectNewTime" resultMap="BaseResultMap">
        select uc.id, uc.sender_id, uc.receiver_id, uc.message, uc.sendTime, uc.status,
        r.id r_id,s.id s_id,r.headImgUrl r_headImgUrl,r.nickName r_nickName,s.headImgUrl s_headImgUrl,s.nickName
        s_nickName
        from userchat uc
        JOIN user r ON r.id = uc.receiver_id
        JOIN user s ON s.id = uc.sender_id
        <where>
            <if test="senderId != null">
                and uc.sender_id=#{senderId}
            </if>
            <if test="senderId != null">
                and uc.receiver_id=#{receiverId}
            </if>
            <if test="newTime!=null">
                and uc.sendTime > #{newTime}
            </if>
        </where>
    </select>
</mapper>